buildscript {
  repositories { jcenter() }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
  }
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'com.github.johnrengelman.shadow'

description = """libnd4j-SIGFPE-error"""

group = 'ai.bernie'
version = '0.1-SNAPSHOT'
applicationName = 'bernie-api'
mainClassName = 'ai.bernie.researchtests.TrainNetStandalone'
compileJava.options.encoding = 'UTF-8'

applicationDefaultJvmArgs = ["-Dgreeting.language=en","-Xms512m","-Xmx6096m"]

task wrapper(type: Wrapper) {
  gradleVersion = '2.13' //version required
}

repositories {
  mavenLocal()
  mavenCentral()
"~/dl4j-ethnicity-test/build.gradle" 130L, 4271C                                                                             1,1           Top
  mavenLocal()
  mavenCentral()
//  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
//  flatDir(dirs: 'cnn_dataset')
}

tasks.withType(ScalaCompile) {
  configure(scalaCompileOptions.forkOptions) {
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.useCompileDaemon = true
    memoryMaximumSize = '4g'
  }
  scalaCompileOptions.useAnt = false
  sourceCompatibility = "1.7"
  targetCompatibility = "1.7"
//  useCompileDaemon = true
}

switch(libnd4jOS) {
  case 'windows':
    libnd4jOS = 'win-x86_64'
    break
  case 'linux':
    libnd4jOS = 'linux-x86_64'
    break
  case 'linux-ppc64':
    libnd4jOS = 'linux-ppc64'
    break
                                                                                                                             28,3          26%
    libnd4jOS = 'linux-ppc64'
    break
  case 'linux-ppc64le':
    libnd4jOS = 'linux-ppc64le'
    break
  case 'macosx':
    libnd4jOS = 'macosx-x86_64'
    break
  default:
    throw new Exception('Unknown OS defined for -Plibnd4jOS parameter. ND4J will be unable to find platform-specific binaries and thus unable to run.')
}

configurations {
  all {
    exclude group: 'org.mortbay.jetty'
//    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
//    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.fusesource.scalate'
    exclude group: 'com.sun.jersey.jersey-test-framework', module: 'jersey-test-framework-grizzly2'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'org.bytedeco', module: 'javacpp-presets'
  }
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.11'
  testCompile 'org.scalatest:scalatest_2.10:3.0.0-M7'
  compile "org.scala-lang:scala-library:2.10.5"
  compile "org.scala-lang:scala-compiler:2.10.5"
  compile "org.scala-lang:scala-reflect:2.10.5"

  // Spark
  compile('org.apache.spark:spark-core_2.10:1.6.1') {
    exclude group: 'com.google.guava'
    // yields security error due to differing versions
    exclude group: 'org.eclipse.jetty.orbit', module: 'javax.servlet'
    exclude group: 'org.glassfish', module: 'javax.servlet'
    exclude group: 'javax.servlet', module: 'javax.servlet-api'
    exclude group: 'com.sun.jersey.jersey-test-framework', module: 'jersey-test-framework-grizzly2'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
  }

  compile 'com.fasterxml.jackson.core:jackson-core:2.6.3'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.6.3'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.3'
  compile 'com.fasterxml.jackson.module:jackson-module-scala_2.10:2.6.3'

  compile 'org.deeplearning4j:deeplearning4j-core:0.4-rc3.10-SNAPSHOT'
//  compile 'org.deeplearning4j:deeplearning4j-ui:0.4-rc3.10-SNAPSHOT'
  compile 'org.deeplearning4j:dl4j-spark:0.4-rc3.10-SNAPSHOT'
  compile 'org.nd4j:nd4j-native:0.4-rc3.10-SNAPSHOT'
  compile 'org.nd4j:nd4j-native:0.4-rc3.10-SNAPSHOT:'+libnd4jOS
  compile 'org.bytedeco:javacpp:1.2'
  compile 'org.bytedeco.javacpp-presets:opencv:3.1.0-1.2'
  compile 'org.bytedeco.javacpp-presets:opencv:3.1.0-1.2:'+libnd4jOS
  compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'

  compile 'javax.mail:javax.mail-api:1.5.5'
  compile 'org.glassfish.jersey.core:jersey-server:2.22.2'
  compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.22.2'
  compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22.2'
}

jar {
  from sourceSets.main.allScala
}

shadowJar {
  transform(com.github.jengelman.gradle.plugins.shadow.transformers.AppendingTransformer) {
    resource = 'reference.conf'
  }
  zip64 = true
}
